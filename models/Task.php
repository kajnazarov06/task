<?php

namespace app\models;

use Yii;
use yii\caching\TagDependency;

class Task extends \app\models\gii\Task
{
    public const PRIORITY_MINOR    = 1;
    public const PRIORITY_LOW      = 2;
    public const PRIORITY_NORMAL   = 3;
    public const PRIORITY_HIGH     = 4;
    public const PRIORITY_CRITICAL = 5;
    public const PRIORITIES        = [
        self::PRIORITY_MINOR    => 'Очень низкий',
        self::PRIORITY_LOW      => 'Низкий',
        self::PRIORITY_NORMAL   => 'Нормальный',
        self::PRIORITY_HIGH     => 'Высокий',
        self::PRIORITY_CRITICAL => 'Критичный',
    ];
    public const STATUS_NEW                  = 1;
    public const STATUS_ON_GRADE             = 2;
    public const STATUS_GRADE_CONFIRM        = 3;
    public const STATUS_TO_PROCESS           = 4;
    public const STATUS_IN_PROCESS           = 5;
    public const STATUS_ON_CHECK             = 6;
    public const STATUS_REPROCESS            = 7;
    public const STATUS_DONE                 = 8;
    public const STATUS_CANCELED             = 9;
    public const STATUSES_NAMES              = [
        self::STATUS_NEW           => 'Формирование задачи',
        self::STATUS_ON_GRADE      => 'На оценке',
        self::STATUS_GRADE_CONFIRM => 'Согласование оценки',
        self::STATUS_TO_PROCESS    => 'В работу',
        self::STATUS_IN_PROCESS    => 'На исполнении',
        self::STATUS_ON_CHECK      => 'На проверке',
        self::STATUS_REPROCESS     => 'На доработке',
        self::STATUS_DONE          => 'Выполнена',
        self::STATUS_CANCELED      => 'Отменена',
    ];

    public function attributeLabels()
    {
        return [
            'id' => 'Идентификатор',
            'title' => 'Имя',
            'description' => 'Описание',
            'due_date' => 'Длительность',
            'status' => 'Статус',
            'priority' => 'Приоритет',
        ];
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes);
        TagDependency::invalidate(Yii::$app->cache, 'Task');
    }

    public function afterDelete()
    {
        parent::afterDelete(); // TODO: Change the autogenerated stub
        TagDependency::invalidate(Yii::$app->cache, 'Task');
    }
}